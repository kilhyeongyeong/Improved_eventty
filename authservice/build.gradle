plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.2'
	id 'io.spring.dependency-management' version '1.1.2'
}

group = 'com.eventty'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

test.onlyIf {
	!project.hasProperty('dev')
}


dependencies {
	// Web, valication
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// Spring Context
	implementation 'org.springframework:spring-context'

	// JACKSON
	implementation 'com.fasterxml.jackson.core:jackson-databind'
	implementation("jakarta.json:jakarta.json-api:2.0.1")

	// Reactive
	implementation 'org.springframework.boot:spring-boot-starter-webflux'

	// swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'

	// dev tools
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// JPA
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	// 테스트 코드 작성시 사용할 DB(H2)
	runtimeOnly 'com.h2database:h2'
	// 개발 환경에서 사용하는 DB(mysql)
	runtimeOnly 'com.mysql:mysql-connector-j:8.0.33'

	// Security
	implementation 'org.springframework.boot:spring-boot-starter-security'

	// JWT
	implementation 'io.jsonwebtoken:jjwt:0.9.1';
	implementation 'javax.xml.bind:jaxb-api:2.3.1'

	// OAuth 2.0
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	// Logging
	implementation 'org.slf4j:slf4j-api'
	implementation 'ch.qos.logback:logback-classic'

	// 날짜/시간 타입 처리하기 위한 Jackson
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

tasks.named('test') {
	useJUnitPlatform()
}
